---
- block:

    - name: Add info to OS_MIG_STATUS
      ansible.builtin.lineinfile: 
        path: "{{ OS_MIG_STATUS }}"
        line: "LEAPP_UPGRADE: Start"
        state: present
        create: true

    - name: leapp-upgrade | Include the parse_leapp_report role to check for inhibitors
      ansible.builtin.include_role:
        name: parse_leapp_report
    
    - name: leapp-upgrade | Verify no inhibitor results found during preupgrade
      ansible.builtin.assert:
        that: not upgrade_inhibited
        msg: Inhibitors found, please investigate and rerun analysis.
    
    - name: leapp-upgrade | Register to leapp activation key
      community.general.redhat_subscription:
        state: present
        activationkey: "{{ satellite_activation_key_leapp }}"
        org_id: "{{ satellite_organization }}"
        force_register: true
      when:
        - leapp_upgrade_type == 'satellite'
        - satellite_organization is defined
        - satellite_activation_key_leapp is defined
    
    - name: leapp-upgrade | Include update_and_reboot.yml
      ansible.builtin.include_tasks: update_and_reboot.yml
    
    - name: leapp-upgrade | Start Leapp OS upgrade
      ansible.builtin.shell: >
        set -o pipefail;
        export PATH={{ os_path }};
        leapp upgrade --target={{ target_version }} 
        {{ leapp_upgrade_opts }}
        {{ leapp_enable_repos_args }}
        2>&1 | tee -a {{ log_file }}
      args:
        executable: /bin/bash
      async: "{{ async_timeout_maximum | int }}"
      poll: "{{ async_poll_interval | int }}"
      changed_when: true
    
    - name: leapp-upgrade | Reboot to continue Leapp OS upgrade
      ansible.builtin.reboot:
        msg: Host is starting Leapp OS upgrade now!
        reboot_timeout: 43200
        post_reboot_delay: "{{ post_reboot_delay }}"
      timeout: 43260
    
    # Ansible discovers /usr/bin/python on RHEL 7, then on RHEL 8 it is no longer available.
    - name: leapp-upgrade | Set python interpreter to /usr/bin/python3 since /usr/bin/python is no longer available
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
    
    - name: leapp-upgrade | Wait for leapp_resume run once service to no longer exist
      ansible.builtin.service:
        name: leapp_resume
        state: started
      check_mode: true
      register: leapp_resume_result
      ignore_errors: true
      until: leapp_resume_result.failed
      retries: 360
      delay: 10
    
    - name: leapp-upgrade | Block to handle grub_boot_device option
      when: grub_boot_device is defined
      block:
        - name: leapp-upgrade | Run grub2-install
          ansible.builtin.shell: >
            export PATH={{ os_path }};
            grub2-install {{ grub_boot_device }}
          changed_when: true
    
        - name: leapp-upgrade | Reboot to pickup grub update
          ansible.builtin.reboot:
            reboot_timeout: 7200
            post_reboot_delay: "{{ post_reboot_delay }}"
          timeout: 7260

    - name: Add info to OS_MIG_STATUS
      ansible.builtin.lineinfile: 
        path: "{{ OS_MIG_STATUS }}"
        line: "LEAPP_UPGRADE: Complete"
        state: present
        create: true

  rescue:

    - name: Add info to OS_MIG_STATUS
      ansible.builtin.lineinfile: 
        path: "{{ OS_MIG_STATUS }}"
        line: "LEAPP_UPGRADE: Fail"
        state: present
        create: true

    - name: Print message
      ansible.builtin.debug:
        msg: "An error occured in leapp upgrade process"

...
